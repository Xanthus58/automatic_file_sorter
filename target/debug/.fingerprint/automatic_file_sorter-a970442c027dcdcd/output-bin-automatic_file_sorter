{"message":"unused imports: `thread`, `time::Duration`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":64,"byte_end":78,"line_start":4,"line_end":4,"column_start":15,"column_end":29,"is_primary":true,"text":[{"text":"use std::{fs, time::Duration, thread};","highlight_start":15,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\main.rs","byte_start":80,"byte_end":86,"line_start":4,"line_end":4,"column_start":31,"column_end":37,"is_primary":true,"text":[{"text":"use std::{fs, time::Duration, thread};","highlight_start":31,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":62,"byte_end":86,"line_start":4,"line_end":4,"column_start":13,"column_end":37,"is_primary":true,"text":[{"text":"use std::{fs, time::Duration, thread};","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `thread`, `time::Duration`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:4:15\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0muse std::{fs, time::Duration, thread};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unreachable statement","code":{"code":"unreachable_code","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":3291,"byte_end":3301,"line_start":77,"line_end":77,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    credits();","highlight_start":5,"highlight_end":15}],"label":"unreachable statement","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\main.rs","byte_start":703,"byte_end":3286,"line_start":28,"line_end":76,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    loop{","highlight_start":5,"highlight_end":10},{"text":"        let entries = fs::read_dir(\"./\").unwrap();","highlight_start":1,"highlight_end":51},{"text":"        for entry in entries {","highlight_start":1,"highlight_end":31},{"text":"            let path = entry.unwrap().path();","highlight_start":1,"highlight_end":46},{"text":"            let file_name = match path.file_name() {","highlight_start":1,"highlight_end":53},{"text":"                Some(file_name) => file_name,","highlight_start":1,"highlight_end":46},{"text":"                None => continue,","highlight_start":1,"highlight_end":34},{"text":"            };","highlight_start":1,"highlight_end":15},{"text":"            let download_dir = match path.extension() {","highlight_start":1,"highlight_end":56},{"text":"                Some(ext) if ext == \"jpg\" => \"Downloaded Pictures\",","highlight_start":1,"highlight_end":68},{"text":"                Some(ext) if ext == \"jpeg\" => \"Downloaded Pictures\",","highlight_start":1,"highlight_end":69},{"text":"                Some(ext) if ext == \"png\" => \"Downloaded Pictures\",","highlight_start":1,"highlight_end":68},{"text":"                Some(ext) if ext == \"psd\" => \"Downloaded Pictures\",","highlight_start":1,"highlight_end":68},{"text":"                Some(ext) if ext == \"svg\" => \"Downloaded Pictures\",","highlight_start":1,"highlight_end":68},{"text":"                Some(ext) if ext == \"ai\" => \"Downloaded Pictures\",","highlight_start":1,"highlight_end":67},{"text":"                Some(ext) if ext == \"mp4\" => \"Downloaded Videos\",","highlight_start":1,"highlight_end":66},{"text":"                Some(ext) if ext == \"mkv\" => \"Downloaded Videos\",","highlight_start":1,"highlight_end":66},{"text":"                Some(ext) if ext == \"avi\" => \"Downloaded Videos\",","highlight_start":1,"highlight_end":66},{"text":"                Some(ext) if ext == \"mp3\" => \"Downloaded Music\",","highlight_start":1,"highlight_end":65},{"text":"                Some(ext) if ext == \"ogg\" => \"Downloaded Music\",","highlight_start":1,"highlight_end":65},{"text":"                Some(ext) if ext == \"wma\" => \"Downloaded Music\",","highlight_start":1,"highlight_end":65},{"text":"                Some(ext) if ext == \"gif\" => \"Downloaded Gifs\",","highlight_start":1,"highlight_end":64},{"text":"                Some(ext) if ext == \"zip\" => \"Downloaded Files\",","highlight_start":1,"highlight_end":65},{"text":"                Some(ext) if ext == \"rar\" => \"Downloaded Files\",","highlight_start":1,"highlight_end":65},{"text":"                Some(ext) if ext == \"7z\" => \"Downloaded Files\",","highlight_start":1,"highlight_end":64},{"text":"                Some(ext) if ext == \"mov\" => \"Downloaded Videos\",","highlight_start":1,"highlight_end":66},{"text":"                Some(ext) if ext == \"txt\" => \"Downloaded Doccuments\",","highlight_start":1,"highlight_end":70},{"text":"                Some(ext) if ext == \"pdf\" => \"Downloaded Doccuments\",","highlight_start":1,"highlight_end":70},{"text":"                Some(ext) if ext == \"doc\" => \"Downloaded Doccuments\",","highlight_start":1,"highlight_end":70},{"text":"                Some(ext) if ext == \"docx\" => \"Downloaded Doccuments\",","highlight_start":1,"highlight_end":71},{"text":"                Some(ext) if ext == \"html\" => \"Downloaded Doccuments\",","highlight_start":1,"highlight_end":71},{"text":"                Some(ext) if ext == \"htm\" => \"Downloaded Doccuments\",","highlight_start":1,"highlight_end":70},{"text":"                Some(ext) if ext == \"ppt\" => \"Downloaded Doccuments\",","highlight_start":1,"highlight_end":70},{"text":"                Some(ext) if ext == \"pptx\" => \"Downloaded Doccuments\",","highlight_start":1,"highlight_end":71},{"text":"                Some(ext) if ext == \"clsx\" => \"Downloaded Doccuments\",","highlight_start":1,"highlight_end":71},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                _ => continue,","highlight_start":1,"highlight_end":31},{"text":"            };","highlight_start":1,"highlight_end":15},{"text":"            let download_dir = Path::new(download_dir);","highlight_start":1,"highlight_end":56},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fs::create_dir_all(download_dir).unwrap();","highlight_start":1,"highlight_end":55},{"text":"            fs::rename(&path, download_dir.join(file_name)).unwrap();","highlight_start":1,"highlight_end":70},{"text":"            print!(\"Name: \");","highlight_start":1,"highlight_end":30},{"text":"            green!(\"{} \",path.display());","highlight_start":1,"highlight_end":42},{"text":"            print!(\"Moved to \");","highlight_start":1,"highlight_end":33},{"text":"            red!(\"{}\\n\",download_dir.display());","highlight_start":1,"highlight_end":49},{"text":"            //println!(\"Name: {} Moved to {}\", path.display(), download_dir.display());","highlight_start":1,"highlight_end":88},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":"any code following this expression is unreachable","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unreachable_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unreachable statement\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:77:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    loop{\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let entries = fs::read_dir(\"./\").unwrap();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        for entry in entries {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let path = entry.unwrap().path();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m75\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m76\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|_____-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14many code following this expression is unreachable\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m77\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m    credits();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11munreachable statement\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unreachable_code)]` on by default\u001b[0m\n\n"}
{"message":"2 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: 2 warnings emitted\u001b[0m\n\n"}
